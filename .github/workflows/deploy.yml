name: 🚀 Auto Deploy CI/CD

on:
  push:
    branches: [ "**" ]
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy-preview:
    name: 🎯 Deploy Preview - ${{ github.ref_name }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref != 'refs/heads/main'

    steps:
    - name: 🔍 Checkout Code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.11'
        cache: ''

    - name: 🏷️ Generate Subdomain
      id: subdomain
      run: |
        BRANCH_NAME="${{ github.ref_name }}"
        SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]' | cut -c1-20)
        echo "subdomain=preview-$SANITIZED_BRANCH" >> $GITHUB_OUTPUT
        echo "🌐 Preview URL: http://preview-$SANITIZED_BRANCH.salasarstones.com"

    - name: 🔑 Setup SSH Connection
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: 🚀 Deploy to Preview
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        set -e
        echo "=== 🚀 STARTING PREVIEW DEPLOYMENT ==="
        
        BRANCH_NAME="${{ github.ref_name }}"
        APP_NAME="${{ steps.subdomain.outputs.subdomain }}"
        APP_DIR="/var/www/$APP_NAME"
        
        echo "📝 Branch: $BRANCH_NAME"
        echo "🏷️ App: $APP_NAME"
        
        # Get automatic port
        PORT=$(/opt/scripts/port_manager.sh)
        echo "🔌 Port: $PORT"
        
        # Clean setup
        mkdir -p $APP_DIR
        cd $APP_DIR
        rm -rf ./*
        
        # Copy code
        echo "📦 Copying files..."
        git clone -b $BRANCH_NAME https://github.com/${{ github.repository }}.git .
        
        # Install & run
        npm install
        pm2 delete $APP_NAME 2>/dev/null || true
        PORT=$PORT APP_NAME=$APP_NAME pm2 start npm --name "$APP_NAME" -- run start
        pm2 save
        
        # Nginx setup
        /opt/scripts/create_nginx_config.sh $APP_NAME $PORT
        
        echo "=== ✅ PREVIEW DEPLOYMENT COMPLETE ==="
        echo "🌐 URL: http://$APP_NAME.salasarstones.com"
        echo "🔧 PM2: $APP_NAME"
        echo "🚪 Port: $PORT"
        EOF

  deploy-production:
    name: 🏭 Deploy to Production
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - name: 🔍 Checkout Code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.11'
        cache: ''

    - name: 🏷️ Generate Production Subdomain
      id: prod-subdomain
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        echo "subdomain=pr$PR_NUMBER" >> $GITHUB_OUTPUT
        echo "🏭 Production URL: http://pr$PR_NUMBER.salasarstones.com"

    - name: 🔑 Setup SSH Connection
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: 🚀 Deploy to Production
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        set -e
        echo "=== 🏭 STARTING PRODUCTION DEPLOYMENT ==="
        
        PR_NUMBER=${{ github.event.pull_request.number }}
        APP_NAME="pr$PR_NUMBER"
        APP_DIR="/var/www/$APP_NAME"
        
        echo "📋 PR Number: $PR_NUMBER"
        echo "🏷️ App: $APP_NAME"
        
        # Get automatic port
        PORT=$(/opt/scripts/port_manager.sh)
        echo "🔌 Port: $PORT"
        
        # Clean setup
        mkdir -p $APP_DIR
        cd $APP_DIR
        rm -rf ./*
        
        # Deploy production code
        echo "📦 Deploying production code..."
        git clone https://github.com/${{ github.repository }}.git .
        npm install
        pm2 delete $APP_NAME 2>/dev/null || true
        PORT=$PORT APP_NAME=$APP_NAME pm2 start npm --name "$APP_NAME" -- run start
        pm2 save
        
        # Nginx setup
        /opt/scripts/create_nginx_config.sh $APP_NAME $PORT
        
        echo "=== ✅ PRODUCTION DEPLOYMENT COMPLETE ==="
        echo "🌐 URL: http://$APP_NAME.salasarstones.com"
        echo "🔧 PM2: $APP_NAME"
        echo "🚪 Port: $PORT"
        EOF
